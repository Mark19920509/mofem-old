CMAKE_MINIMUM_REQUIRED (VERSION 3.1)
PROJECT (mofem)

SET(EXECUTABLE_NAME mofem)
SET (${EXECUTABLE_NAME}_VERSION_MAJOR 0)
SET (${EXECUTABLE_NAME}_VERSION_MINOR 2)
  
# Sources
INCLUDE(CMakeSrcs.txt)

# Find Boost
# Make sure BOOST_ROOT environment variable is set
FIND_PACKAGE(Boost 1.5.7 REQUIRED)
IF(Boost_FOUND)
  INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIRS})
ENDIF()

# Find SFML
# Make sure SFML_ROOT environment variable is set
SET(CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/cmake_modules" ${CMAKE_MODULE_PATH})
FIND_PACKAGE(SFML 2 REQUIRED system window graphics)
IF(SFML_FOUND)
  INCLUDE_DIRECTORIES(${SFML_INCLUDE_DIR})
ENDIF()

# Find Eigen
SET(EIGEN_ROOT $ENV{EIGEN_ROOT} CACHE PATH "Eigen root directory")
INCLUDE_DIRECTORIES(${EIGEN_ROOT})

# Find SFGUI
SET(SFGUI_ROOT $ENV{SFGUI_ROOT} CACHE PATH "SFGUI root directory")
INCLUDE_DIRECTORIES(${SFGUI_ROOT}/include)
FIND_LIBRARY(SFGUI_LIBRARY sfgui ${SFGUI_ROOT}/lib)

INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/src)

# Build types
UNSET(CMAKE_CONFIGURATION_TYPES CACHE)
SET(CMAKE_CONFIGURATION_TYPES "Debug;Release" CACHE STRING "Supported config types")

# No install
UNSET(CMAKE_INSTALL_PREFIX CACHE)

# Preproccessor 
ADD_DEFINITIONS(-DEIGEN_DEFAULT_TO_ROW_MAJOR)

# Executable
ADD_EXECUTABLE(${EXECUTABLE_NAME} ${SRC_ALL})

# Link libraries
TARGET_LINK_LIBRARIES(${EXECUTABLE_NAME} ${SFML_LIBRARIES})
TARGET_LINK_LIBRARIES(${EXECUTABLE_NAME} ${SFGUI_LIBRARY})

# Source Groups
INCLUDE(CMakeSrcGroups.txt)